services:
  frontend-admin:
    build:
      context: ./frontend/admin
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
      - CHOKIDAR_USEPOLLING=false
      - FAST_REFRESH=false
      - DISABLE_ESLINT_PLUGIN=true
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./frontend/admin:/app
      - /app/node_modules
    depends_on:
      - user-service
      - question-service
    container_name: frontend-admin

  frontend-user:
    build:
      context: ./frontend/users/peerprep-react
      dockerfile: Dockerfile
    ports:
      - "2999:2999"
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
      - CHOKIDAR_USEPOLLING=false
      - FAST_REFRESH=false
      - DISABLE_ESLINT_PLUGIN=true
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./frontend/users/peerprep-react:/app
      - /app/node_modules
    depends_on:
      - user-service
      - question-service
    container_name: frontend-user

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file: 
      - path: ./user-service/.env
    # environment:
    #   - MONGODB_URI=${MONGODB_URI}/${USER_DB_NAME}
    #   - JWT_SECRET=${JWT_SECRET}
    container_name: user-service

  question-service:
    build:
      context: ./question-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file: 
      - path: ./question-service/.env
    # environment:
    #   - MONGODB_URI=${MONGODB_URI}/${QUESTION_DB_NAME}
    #   - JWT_SECRET=${JWT_SECRET}
    container_name: question-service

  matching-service:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - path: ./matching-service/.env
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    depends_on:
      - rabbitmq
      - user-service
    container_name: matching-service
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
  collab-service:
    build:
      context: ./collab-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    env_file:
      - path: ./collab-service/.env
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    depends_on:
      - rabbitmq
    container_name: collab-service
    extra_hosts:
      - "host.docker.internal:host-gateway"

  collab-y-websocket:
    build:
      context: ./collab-y-websocket
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    container_name: collab-y-websocket
    extra_hosts:
      - "host.docker.internal:host-gateway"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"    # RabbitMQ default port
      - "15672:15672"  # Management plugin port
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data: 